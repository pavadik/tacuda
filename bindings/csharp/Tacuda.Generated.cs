// <auto-generated>
// This file was generated by bindings/generate_bindings.py.
// Do not edit manually.
// </auto-generated>
using System;
using System.Runtime.InteropServices;

namespace Tacuda.Bindings;

internal static partial class NativeMethods
{
#if WINDOWS
    private const string LibraryName = "tacuda.dll";
#elif OSX
    private const string LibraryName = "libtacuda.dylib";
#else
    private const string LibraryName = "libtacuda.so";
#endif

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_sma(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_ma(float[] host_input, float[] host_output, int size, int period, int type, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_mavp(float[] host_input, float[] host_periods, float[] host_output, int size, int minPeriod, int maxPeriod, int type, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_wma(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_momentum(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_change(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_roc(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_rocp(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_rocr(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_rocr100(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_ema(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_dema(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_tema(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_t3(float[] host_input, float[] host_output, int size, int period, float vFactor, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_trima(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_trix(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_max(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_min(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_maxindex(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_minindex(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_minmax(float[] host_input, float[] host_min, float[] host_max, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_minmaxindex(float[] host_input, float[] host_minidx, float[] host_maxidx, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_stddev(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_avgdev(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_var(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_sum(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_rsi(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_kama(float[] host_input, float[] host_output, int size, int period, int fastPeriod, int slowPeriod, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_macd_line(float[] host_input, float[] host_output, int size, int fastPeriod, int slowPeriod, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_macd(float[] host_input, float[] host_macd, float[] host_signal, float[] host_hist, int size, int fastPeriod, int slowPeriod, int signalPeriod, int type, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_macdfix(float[] host_input, float[] host_macd, float[] host_signal, float[] host_hist, int size, int signalPeriod, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_mama(float[] host_input, float[] host_mama, float[] host_fama, int size, float fastLimit, float slowLimit, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_apo(float[] host_input, float[] host_output, int size, int fastPeriod, int slowPeriod, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_ppo(float[] host_input, float[] host_output, int size, int fastPeriod, int slowPeriod, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_pvo(float[] host_volume, float[] host_output, int size, int fastPeriod, int slowPeriod, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_sma_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_ma_device(float[] device_input, float[] device_output, int size, int period, int type, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_wma_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_momentum_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_change_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_roc_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_rocp_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_rocr_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_rocr100_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_ema_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_dema_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_tema_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_t3_device(float[] device_input, float[] device_output, int size, int period, float vFactor, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_trima_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_trix_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_max_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_min_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_maxindex_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_minindex_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_stddev_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_var_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_sum_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_rsi_device(float[] device_input, float[] device_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_kama_device(float[] device_input, float[] device_output, int size, int period, int fastPeriod, int slowPeriod, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_macd_line_device(float[] device_input, float[] device_output, int size, int fastPeriod, int slowPeriod, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_apo_device(float[] device_input, float[] device_output, int size, int fastPeriod, int slowPeriod, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_ppo_device(float[] device_input, float[] device_output, int size, int fastPeriod, int slowPeriod, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_pvo_device(float[] device_volume, float[] device_output, int size, int fastPeriod, int slowPeriod, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_accbands(float[] host_high, float[] host_low, float[] host_close, float[] host_upper, float[] host_middle, float[] host_lower, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_bbands(float[] host_input, float[] host_upper, float[] host_middle, float[] host_lower, int size, int period, float upperMul, float lowerMul, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_atr(float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, int period, float initial, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_natr(float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_trange(float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_stochastic(float[] host_high, float[] host_low, float[] host_close, float[] host_k, float[] host_d, int size, int kPeriod, int dPeriod, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_stochf(float[] host_high, float[] host_low, float[] host_close, float[] host_k, float[] host_d, int size, int kPeriod, int dPeriod, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_stochrsi(float[] host_input, float[] host_k, float[] host_d, int size, int rsiPeriod, int kPeriod, int dPeriod, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cci(float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_adx(float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_adxr(float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_plus_dm(float[] host_high, float[] host_low, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_minus_dm(float[] host_high, float[] host_low, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_plus_di(float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_minus_di(float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_mfi(float[] host_high, float[] host_low, float[] host_close, float[] host_volume, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_imi(float[] host_open, float[] host_close, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_obv(float[] host_price, float[] host_volume, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_nvi(float[] host_close, float[] host_volume, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_pvi(float[] host_close, float[] host_volume, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_sar(float[] host_high, float[] host_low, float[] host_output, int size, float step, float maxAcceleration, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_sarext(float[] host_high, float[] host_low, float[] host_output, int size, float startValue, float offsetOnReverse, float accInitLong, float accLong, float accMaxLong, float accInitShort, float accShort, float accMaxShort, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_aroon(float[] host_high, float[] host_low, float[] host_up, float[] host_down, float[] host_osc, int size, int upPeriod, int downPeriod, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_aroonosc(float[] host_high, float[] host_low, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_adosc(float[] host_high, float[] host_low, float[] host_close, float[] host_volume, float[] host_output, int size, int shortPeriod, int longPeriod, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_ultosc(float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, int shortPeriod, int mediumPeriod, int longPeriod, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_ad(float[] host_high, float[] host_low, float[] host_close, float[] host_volume, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_avgprice(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_medprice(float[] host_high, float[] host_low, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_typprice(float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_wclprice(float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_willr(float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_midpoint(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_midprice(float[] host_high, float[] host_low, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_beta(float[] host_x, float[] host_y, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_bop(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_doji(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_hammer(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_inverted_hammer(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_bullish_engulfing(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_bearish_engulfing(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_three_white_soldiers(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_abandoned_baby(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_advance_block(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_belt_hold(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_breakaway(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_two_crows(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_three_black_crows(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_three_inside(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_three_outside(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_three_line_strike(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_three_stars_in_south(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_closing_marubozu(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_conceal_baby_swallow(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_counterattack(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_dark_cloud_cover(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_doji_star(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_dragonfly_doji(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_engulfing(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_evening_doji_star(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_evening_star(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_gap_side_side_white(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_gravestone_doji(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_hanging_man(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_harami(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_harami_cross(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_high_wave(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_hikkake(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_hikkake_mod(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_homing_pigeon(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_identical_three_crows(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_in_neck(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_kicking(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_kicking_by_length(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_ladder_bottom(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_long_legged_doji(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_long_line(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_marubozu(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_matching_low(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_mat_hold(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_morning_doji_star(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_morning_star(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_on_neck(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_piercing(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_rickshaw_man(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_rise_fall3_methods(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_separating_lines(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_shooting_star(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_short_line(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_spinning_top(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_stalled_pattern(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_stick_sandwich(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_takuri(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_tasuki_gap(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_thrusting(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_tristar(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_unique_3_river(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_upside_gap_2_crows(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cdl_xside_gap_3_methods(float[] host_open, float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_cmo(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_correl(float[] host_x, float[] host_y, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_dx(float[] host_high, float[] host_low, float[] host_close, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_linearreg(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_linearreg_slope(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_linearreg_intercept(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_linearreg_angle(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_tsf(float[] host_input, float[] host_output, int size, int period, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_ht_dcperiod(float[] host_input, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_ht_dcphase(float[] host_input, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_ht_phasor(float[] host_input, float[] host_inphase, float[] host_quadrature, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_ht_sine(float[] host_input, float[] host_sine, float[] host_leadsine, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_ht_trendline(float[] host_input, float[] host_output, int size, IntPtr stream = default);

    [DllImport(LibraryName, CallingConvention = CallingConvention.Cdecl)]
    internal static extern int ct_ht_trendmode(float[] host_input, float[] host_output, int size, IntPtr stream = default);

}

